# This script takes two params:
#   1.) An image (ideally 1024x1024)
#   2.) An output directory (will be created)
# It will then resize the source image to many sizes used by XCode

if [ "$#" -ne 2 ]; then
  echo "usage: $0 image_name output_dir";
  exit 1;
fi

if [ $1 = "--help" ]; then
    echo "usage: $0 image_name output_dir";
    exit 1;
fi

echo Processing icons....

# Name our output dir
OUTPUT_DIR=$2

# Tell the user what is about to happen
echo Resizing $1 to Xcode sizes in directory $2

# Create an output directory
rm -rf $OUTPUT_DIR > /dev/null
mkdir $OUTPUT_DIR > /dev/null

# Generate images
# 16
sips $1 -z 32 32 -o $OUTPUT_DIR/$2_16@2x.png > /dev/null
sips $1 -z 16 16 -o $OUTPUT_DIR/$2_16.png > /dev/null
# 29 
sips $1 -z 58 58 -o $OUTPUT_DIR/$2_29@2x.png > /dev/null
sips $1 -z 29 29 -o $OUTPUT_DIR/$2_29.png > /dev/null
# 32
sips $1 -z 64 64 -o $OUTPUT_DIR/$2_32@2x.png > /dev/null
sips $1 -z 32 32 -o $OUTPUT_DIR/$2_32.png > /dev/null
# 40
sips $1 -z 80 80 -o $OUTPUT_DIR/$2_40@2x.png > /dev/null
sips $1 -z 40 40 -o $OUTPUT_DIR/$2_40.png > /dev/null
# 44
sips $1 -z 88 88 -o $OUTPUT_DIR/$2_44@2x.png > /dev/null
sips $1 -z 44 44 -o $OUTPUT_DIR/$2_44.png > /dev/null
# 50
sips $1 -z 100 100 -o $OUTPUT_DIR/$2_50@2x.png > /dev/null
sips $1 -z 50 50 -o $OUTPUT_DIR/$2_50.png > /dev/null
# 57
sips $1 -z 114 114 -o $OUTPUT_DIR/$2_57@2x.png > /dev/null
sips $1 -z 57 57 -o $OUTPUT_DIR/$2_57.png > /dev/null
# 60
sips $1 -z 120 120 -o $OUTPUT_DIR/$2_60@2x.png > /dev/null
sips $1 -z 60 60 -o $OUTPUT_DIR/$2_60.png > /dev/null
# 72
sips $1 -z 144 144 -o $OUTPUT_DIR/$2_72@2x.png > /dev/null
sips $1 -z 72 72 -o $OUTPUT_DIR/$2_72.png > /dev/null
# 76
sips $1 -z 152 152 -o $OUTPUT_DIR/$2_76@2x.png > /dev/null
sips $1 -z 76 76 -o $OUTPUT_DIR/$2_76.png > /dev/null
# 128
sips $1 -z 256 256 -o $OUTPUT_DIR/$2_128@2x.png > /dev/null
sips $1 -z 128 128 -o $OUTPUT_DIR/$2_128.png > /dev/null
# 256
sips $1 -z 512 512 -o $OUTPUT_DIR/$2_256@2x.png > /dev/null
sips $1 -z 256 256 -o $OUTPUT_DIR/$2_256.png > /dev/null
# 320
sips $1 -z 640 640 -o $OUTPUT_DIR/$2_320@2x.png > /dev/null
sips $1 -z 320 320 -o $OUTPUT_DIR/$2_320.png > /dev/null
# 512
sips $1 -z 1024 1024 -o $OUTPUT_DIR/$2_512@2x.png > /dev/null
sips $1 -z 512 512 -o $OUTPUT_DIR/$2_512.png > /dev/null
#1024
sips $1 -z 1024 1024 -o $OUTPUT_DIR/$2_1024.png > /dev/null

# Show output to user
echo Created the following images in $OUTPUT_DIR
ls -l $OUTPUT_DIR
